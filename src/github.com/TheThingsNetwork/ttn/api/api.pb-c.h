/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/ttn/api/api.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fapi_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fapi_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Api__Ack Api__Ack;
typedef struct _Api__Percentiles Api__Percentiles;
typedef struct _Api__Rates Api__Rates;
typedef struct _Api__ServerMetadata Api__ServerMetadata;


/* --- enums --- */


/* --- messages --- */

/*
 * message Ack is used to acknowledge a request, without giving a response.
 */
struct  _Api__Ack
{
  ProtobufCMessage base;
};
#define API__ACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&api__ack__descriptor) \
     }


struct  _Api__Percentiles
{
  ProtobufCMessage base;
  protobuf_c_boolean has_percentile1;
  float percentile1;
  protobuf_c_boolean has_percentile5;
  float percentile5;
  protobuf_c_boolean has_percentile10;
  float percentile10;
  protobuf_c_boolean has_percentile25;
  float percentile25;
  protobuf_c_boolean has_percentile50;
  float percentile50;
  protobuf_c_boolean has_percentile75;
  float percentile75;
  protobuf_c_boolean has_percentile90;
  float percentile90;
  protobuf_c_boolean has_percentile95;
  float percentile95;
  protobuf_c_boolean has_percentile99;
  float percentile99;
};
#define API__PERCENTILES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&api__percentiles__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


struct  _Api__Rates
{
  ProtobufCMessage base;
  protobuf_c_boolean has_rate1;
  float rate1;
  protobuf_c_boolean has_rate5;
  float rate5;
  protobuf_c_boolean has_rate15;
  float rate15;
};
#define API__RATES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&api__rates__descriptor) \
    , 0,0, 0,0, 0,0 }


struct  _Api__ServerMetadata
{
  ProtobufCMessage base;
};
#define API__SERVER_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&api__server_metadata__descriptor) \
     }


/* Api__Ack methods */
void   api__ack__init
                     (Api__Ack         *message);
size_t api__ack__get_packed_size
                     (const Api__Ack   *message);
size_t api__ack__pack
                     (const Api__Ack   *message,
                      uint8_t             *out);
size_t api__ack__pack_to_buffer
                     (const Api__Ack   *message,
                      ProtobufCBuffer     *buffer);
Api__Ack *
       api__ack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   api__ack__free_unpacked
                     (Api__Ack *message,
                      ProtobufCAllocator *allocator);
/* Api__Percentiles methods */
void   api__percentiles__init
                     (Api__Percentiles         *message);
size_t api__percentiles__get_packed_size
                     (const Api__Percentiles   *message);
size_t api__percentiles__pack
                     (const Api__Percentiles   *message,
                      uint8_t             *out);
size_t api__percentiles__pack_to_buffer
                     (const Api__Percentiles   *message,
                      ProtobufCBuffer     *buffer);
Api__Percentiles *
       api__percentiles__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   api__percentiles__free_unpacked
                     (Api__Percentiles *message,
                      ProtobufCAllocator *allocator);
/* Api__Rates methods */
void   api__rates__init
                     (Api__Rates         *message);
size_t api__rates__get_packed_size
                     (const Api__Rates   *message);
size_t api__rates__pack
                     (const Api__Rates   *message,
                      uint8_t             *out);
size_t api__rates__pack_to_buffer
                     (const Api__Rates   *message,
                      ProtobufCBuffer     *buffer);
Api__Rates *
       api__rates__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   api__rates__free_unpacked
                     (Api__Rates *message,
                      ProtobufCAllocator *allocator);
/* Api__ServerMetadata methods */
void   api__server_metadata__init
                     (Api__ServerMetadata         *message);
size_t api__server_metadata__get_packed_size
                     (const Api__ServerMetadata   *message);
size_t api__server_metadata__pack
                     (const Api__ServerMetadata   *message,
                      uint8_t             *out);
size_t api__server_metadata__pack_to_buffer
                     (const Api__ServerMetadata   *message,
                      ProtobufCBuffer     *buffer);
Api__ServerMetadata *
       api__server_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   api__server_metadata__free_unpacked
                     (Api__ServerMetadata *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Api__Ack_Closure)
                 (const Api__Ack *message,
                  void *closure_data);
typedef void (*Api__Percentiles_Closure)
                 (const Api__Percentiles *message,
                  void *closure_data);
typedef void (*Api__Rates_Closure)
                 (const Api__Rates *message,
                  void *closure_data);
typedef void (*Api__ServerMetadata_Closure)
                 (const Api__ServerMetadata *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor api__ack__descriptor;
extern const ProtobufCMessageDescriptor api__percentiles__descriptor;
extern const ProtobufCMessageDescriptor api__rates__descriptor;
extern const ProtobufCMessageDescriptor api__server_metadata__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fapi_2eproto__INCLUDED */
