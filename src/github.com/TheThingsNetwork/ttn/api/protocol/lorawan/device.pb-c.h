/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/ttn/api/protocol/lorawan/device.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fprotocol_2florawan_2fdevice_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fprotocol_2florawan_2fdevice_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "github.com/gogo/protobuf/gogoproto/gogo.pb-c.h"
#include "github.com/TheThingsNetwork/ttn/api/api.pb-c.h"

typedef struct _Lorawan__DeviceIdentifier Lorawan__DeviceIdentifier;
typedef struct _Lorawan__Device Lorawan__Device;


/* --- enums --- */


/* --- messages --- */

struct  _Lorawan__DeviceIdentifier
{
  ProtobufCMessage base;
  protobuf_c_boolean has_app_eui;
  ProtobufCBinaryData app_eui;
  protobuf_c_boolean has_dev_eui;
  ProtobufCBinaryData dev_eui;
};
#define LORAWAN__DEVICE_IDENTIFIER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__device_identifier__descriptor) \
    , 0,{0,NULL}, 0,{0,NULL} }


struct  _Lorawan__Device
{
  ProtobufCMessage base;
  protobuf_c_boolean has_app_eui;
  ProtobufCBinaryData app_eui;
  protobuf_c_boolean has_dev_eui;
  ProtobufCBinaryData dev_eui;
  char *app_id;
  char *dev_id;
  protobuf_c_boolean has_dev_addr;
  ProtobufCBinaryData dev_addr;
  protobuf_c_boolean has_nwk_s_key;
  ProtobufCBinaryData nwk_s_key;
  protobuf_c_boolean has_app_s_key;
  ProtobufCBinaryData app_s_key;
  protobuf_c_boolean has_app_key;
  ProtobufCBinaryData app_key;
  protobuf_c_boolean has_f_cnt_up;
  uint32_t f_cnt_up;
  protobuf_c_boolean has_f_cnt_down;
  uint32_t f_cnt_down;
  /*
   * Options
   */
  protobuf_c_boolean has_disable_f_cnt_check;
  protobuf_c_boolean disable_f_cnt_check;
  protobuf_c_boolean has_uses32_bit_f_cnt;
  protobuf_c_boolean uses32_bit_f_cnt;
  /*
   * Other
   */
  protobuf_c_boolean has_last_seen;
  int64_t last_seen;
};
#define LORAWAN__DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lorawan__device__descriptor) \
    , 0,{0,NULL}, 0,{0,NULL}, NULL, NULL, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL}, 0,0, 0,0, 0,0, 0,0, 0,0 }


/* Lorawan__DeviceIdentifier methods */
void   lorawan__device_identifier__init
                     (Lorawan__DeviceIdentifier         *message);
size_t lorawan__device_identifier__get_packed_size
                     (const Lorawan__DeviceIdentifier   *message);
size_t lorawan__device_identifier__pack
                     (const Lorawan__DeviceIdentifier   *message,
                      uint8_t             *out);
size_t lorawan__device_identifier__pack_to_buffer
                     (const Lorawan__DeviceIdentifier   *message,
                      ProtobufCBuffer     *buffer);
Lorawan__DeviceIdentifier *
       lorawan__device_identifier__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lorawan__device_identifier__free_unpacked
                     (Lorawan__DeviceIdentifier *message,
                      ProtobufCAllocator *allocator);
/* Lorawan__Device methods */
void   lorawan__device__init
                     (Lorawan__Device         *message);
size_t lorawan__device__get_packed_size
                     (const Lorawan__Device   *message);
size_t lorawan__device__pack
                     (const Lorawan__Device   *message,
                      uint8_t             *out);
size_t lorawan__device__pack_to_buffer
                     (const Lorawan__Device   *message,
                      ProtobufCBuffer     *buffer);
Lorawan__Device *
       lorawan__device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lorawan__device__free_unpacked
                     (Lorawan__Device *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Lorawan__DeviceIdentifier_Closure)
                 (const Lorawan__DeviceIdentifier *message,
                  void *closure_data);
typedef void (*Lorawan__Device_Closure)
                 (const Lorawan__Device *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Lorawan__DeviceManager_Service Lorawan__DeviceManager_Service;
struct _Lorawan__DeviceManager_Service
{
  ProtobufCService base;
  void (*get_device)(Lorawan__DeviceManager_Service *service,
                     const Lorawan__DeviceIdentifier *input,
                     Lorawan__Device_Closure closure,
                     void *closure_data);
  void (*set_device)(Lorawan__DeviceManager_Service *service,
                     const Lorawan__Device *input,
                     Api__Ack_Closure closure,
                     void *closure_data);
  void (*delete_device)(Lorawan__DeviceManager_Service *service,
                        const Lorawan__DeviceIdentifier *input,
                        Api__Ack_Closure closure,
                        void *closure_data);
};
typedef void (*Lorawan__DeviceManager_ServiceDestroy)(Lorawan__DeviceManager_Service *);
void lorawan__device_manager__init (Lorawan__DeviceManager_Service *service,
                                    Lorawan__DeviceManager_ServiceDestroy destroy);
#define LORAWAN__DEVICE_MANAGER__BASE_INIT \
    { &lorawan__device_manager__descriptor, protobuf_c_service_invoke_internal, NULL }
#define LORAWAN__DEVICE_MANAGER__INIT(function_prefix__) \
    { LORAWAN__DEVICE_MANAGER__BASE_INIT,\
      function_prefix__ ## get_device,\
      function_prefix__ ## set_device,\
      function_prefix__ ## delete_device  }
void lorawan__device_manager__get_device(ProtobufCService *service,
                                         const Lorawan__DeviceIdentifier *input,
                                         Lorawan__Device_Closure closure,
                                         void *closure_data);
void lorawan__device_manager__set_device(ProtobufCService *service,
                                         const Lorawan__Device *input,
                                         Api__Ack_Closure closure,
                                         void *closure_data);
void lorawan__device_manager__delete_device(ProtobufCService *service,
                                            const Lorawan__DeviceIdentifier *input,
                                            Api__Ack_Closure closure,
                                            void *closure_data);

/* --- descriptors --- */

extern const ProtobufCMessageDescriptor lorawan__device_identifier__descriptor;
extern const ProtobufCMessageDescriptor lorawan__device__descriptor;
extern const ProtobufCServiceDescriptor lorawan__device_manager__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fprotocol_2florawan_2fdevice_2eproto__INCLUDED */
